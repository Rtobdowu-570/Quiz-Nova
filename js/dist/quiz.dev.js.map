{"version":3,"sources":["quiz.js"],"names":["Quiz","questions","score","shuffleQuestions","timer","currentQuestionIndex","totalQuestions","userAnswers","limit","shuffled","sort","Math","random","slice","selectedOption","currentQuestion","answer","questionIndex","i","savedAnswer","getSavedAnswer","correctAnswer","scoreEl","document","querySelector","textContent","percentage","remarksEl","toFixed","summaryEl","correctEl","incorrectEl","unansweredEl","Object","keys","length","UI","quiz","questionContainer","questionEl","optionsEl","question","innerHTML","options","forEach","option","index","optionDiv","createElement","className","dataset","classList","add","appendChild","updateQuestionTracker","optionEl","querySelectorAll","remove","trackerEl","minutes","seconds","timerDisplay","interval","setInterval","parseInt","clearInterval","showFinalResults","displayQuestionContent","submitQuiz","getRemarks","getSummary","style","display","Store","quizInstance","addEventListener","startTimer","e","target","contains","saveAnswer","prevQuestion","nextButton","getResult","nextQuestion"],"mappings":"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","sourcesContent":["// Quiz Class\nclass Quiz {\n    constructor(questions) {\n        this.score = 0;\n        this.questions = this.shuffleQuestions(questions, 30);\n        this.timer = 900; // 15 minutes in seconds\n        this.currentQuestionIndex = 0;\n        this.totalQuestions = 30;\n        this.userAnswers = {};\n    }\n\n    // Shuffle and limit questions\n    shuffleQuestions(questions, limit) {\n        const shuffled = questions.sort( () => 0.5 - Math.random());\n        return shuffled.slice(0, limit);\n    }\n\n// Check answer \n    checkAnswer(selectedOption) {\n        const currentQuestion = this.questions[this.currentQuestionIndex];\n        if (selectedOption === currentQuestion.answer) {\n            this.score++;\n            return true;\n        }\n        return false;\n    }\n\n     // save user's answer\n    saveAnswer(questionIndex, selectedOption) {\n        this.userAnswers[questionIndex] = selectedOption;\n    }\n    \n    //  get saved answer\n    getSavedAnswer(questionIndex) {\n        return this.userAnswers[questionIndex];\n    }\n\n    // Submit quiz\n    submitQuiz() {\n\n        // calculate final score \n        this.score = 0;\n        for (let i = 0; i < this.totalQuestions; i++) {\n            const savedAnswer = this.getSavedAnswer(i);\n            const correctAnswer = this.questions[i].answer;\n            if (savedAnswer === correctAnswer) {\n                this.score++;\n            }\n        }\n\n        // Logic to handle quiz submission\n        const scoreEl = document.querySelector('.quiz-score');\n        scoreEl.textContent = `${this.score} / ${this.totalQuestions}`;\n \n    }\n\n    //Quiz remarks \n    getRemarks() {\n        const percentage = (this.score / this.totalQuestions) * 100;\n        const remarksEl = document.querySelector('.quiz-remarks');\n        if (percentage >= 80) {\n            remarksEl.textContent = `Excellent Work! You scored ${percentage.toFixed(2)}%`;\n        } else if (percentage >= 50) {\n            remarksEl.textContent = `Great job! You scored ${percentage.toFixed(2)}%`;\n        } else {\n            remarksEl.textContent = `You scored ${percentage.toFixed(2)}%. Better luck next time!`;\n        }\n    }\n\n    // Quiz summary\n    getSummary() {\n        const summaryEl = document.querySelector('.quiz-summary');\n        const correctEl = document.querySelector('#correct-answers');\n        const incorrectEl = document.querySelector('#incorrect-answers');\n        const unansweredEl = document.querySelector('#unanswered-questions');\n\n        correctEl.textContent = this.score;\n        incorrectEl.textContent = this.totalQuestions - this.score;\n        unansweredEl.textContent = this.totalQuestions - Object.keys(this.userAnswers).length;\n    }\n}\n\n\n// UI Class\nclass UI {\n    static displayQuestionContent(quiz) {\n        const questionContainer = document.querySelector('.question-content');\n        const questionEl = document.querySelector('.question-text');\n        const optionsEl = document.querySelector('.question-options');\n\n    // Current Question\n    const currentQuestion = quiz.questions[quiz.currentQuestionIndex];\n\n    // Display question\n    questionEl.textContent = currentQuestion.question;\n\n    // clear old options \n    optionsEl.innerHTML = '';\n\n    // Display options\n    currentQuestion.options.forEach( (option, index) => {\n        const optionDiv = document.createElement('div');\n        optionDiv.className = 'option';\n        optionDiv.textContent = option;\n        optionDiv.dataset.index = index;\n\n         // show previously selected option\n        if (option === quiz.getSavedAnswer(quiz.currentQuestionIndex)) {\n            optionDiv.classList.add('selected');\n        }\n\n        optionsEl.appendChild(optionDiv);\n    });\n\n\n    // Update question tracker\n    this.updateQuestionTracker(quiz);\n}\n\n    // Add selected class to a selected  option\n    static selectedOption(optionEl) {\n        const options = document.querySelectorAll('.option');\n        options.forEach(option => option.classList.remove('selected'));\n        optionEl.classList.add('selected');\n    }\n\n    // question tracker\n    static updateQuestionTracker(quiz) {\n        const trackerEl = document.querySelector('.question-tracker');\n        trackerEl.textContent = `${quiz.currentQuestionIndex + 1} / ${quiz.totalQuestions}`;\n    }\n\n    // Timer\n    static startTimer(quiz) {\n        let timer = quiz.timer, minutes, seconds;\n        let timerDisplay = document.querySelector('.timer-display');\n        \n        // Update the timer every second\n        const interval = setInterval( () => {\n            minutes = parseInt(timer / 60, 10);\n            seconds = parseInt(timer % 60, 10);\n\n            minutes = minutes < 10 ? \"0\" + minutes : minutes;\n            seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n            timerDisplay.textContent = `${minutes}:${seconds}`;\n\n            if (--timer < 0) {\n                clearInterval(interval);\n                // Time's up logic here\n                UI.showFinalResults(quiz);\n            }\n        }, 1000);\n    }\n\n    // Move to next question\n    static nextQuestion(quiz) {\n        if (quiz.currentQuestionIndex < quiz.totalQuestions - 1) {\n            quiz.currentQuestionIndex++;\n            this.displayQuestionContent(quiz);\n        }\n    }\n\n    // Move to previous question\n    static prevQuestion(quiz) {\n        if (quiz.currentQuestionIndex > 0) {\n            quiz.currentQuestionIndex--;\n            this.displayQuestionContent(quiz);\n        }\n    }\n\n    // Show results\n    static showFinalResults(quiz) {\n    quiz.submitQuiz();\n    quiz.getRemarks();\n    quiz.getSummary();\n\n\n    // Stop the timer\n    const timerDisplay = document.querySelector('.timer-display');\n    timerDisplay.textContent = '00:00';\n\n    // Hide quiz section and show results section\n    document.querySelector('.question-container').style.display = 'none';\n    document.querySelector('.result-container').style.display = 'block';\n    }\n\n}\n\n\n// Local Storage\nclass Store {}\n\n\n// Event listeners\n\n// store quiz instance globally\nlet quizInstance;\n\n// display question on DOM load\ndocument.addEventListener('DOMContentLoaded', () => {\n    quizInstance = new Quiz(questions);\n    UI.displayQuestionContent(quizInstance);\n    UI.startTimer(quizInstance);\n});\n\n// Handle option selection\ndocument.querySelector('.question-options').addEventListener('click', (e) => {\n    if (e.target.classList.contains('option')) {\n        UI.selectedOption(e.target);\n\n        // Save selected option\n        const selectedOption = e.target.textContent;\n        quizInstance.saveAnswer(quizInstance.currentQuestionIndex, selectedOption);\n    }\n});\n\n\n// Handle previous button \ndocument.querySelector('.prev-button').addEventListener('click', () => {\n    UI.prevQuestion(quizInstance);\n});\n\n// Handle next button and submit button\nconst  nextButton = document.querySelector('.next-button');\nnextButton.addEventListener('click', getResult);\n\nfunction getResult() {\n    if (quizInstance.currentQuestionIndex === quizInstance.totalQuestions - 1) {\n        // Show final results\n        UI.showFinalResults(quizInstance);\n\n\n    } else {\n        // Move to next question\n        UI.nextQuestion(quizInstance);\n\n         // Check if NEXT question is the last one, then change button text\n        if (quizInstance.currentQuestionIndex === quizInstance.totalQuestions - 1) {\n            nextButton.textContent = 'Submit';\n        }\n    }\n}"],"file":"quiz.dev.js"}